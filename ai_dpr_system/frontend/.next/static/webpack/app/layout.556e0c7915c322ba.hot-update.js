"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/layout",{

/***/ "(app-pages-browser)/./app/globals.css":
/*!*************************!*\
  !*** ./app/globals.css ***!
  \*************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__[\"default\"] = (\"66d348955103\");\nif (true) { module.hot.accept() }\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2FwcC9nbG9iYWxzLmNzcyIsIm1hcHBpbmdzIjoiO0FBQUEsK0RBQWUsY0FBYztBQUM3QixJQUFJLElBQVUsSUFBSSxpQkFBaUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vYXBwL2dsb2JhbHMuY3NzPzJmMjEiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgXCI2NmQzNDg5NTUxMDNcIlxuaWYgKG1vZHVsZS5ob3QpIHsgbW9kdWxlLmhvdC5hY2NlcHQoKSB9XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/globals.css\n"));

/***/ }),

/***/ "(app-pages-browser)/./lib/api/auth-service.ts":
/*!*********************************!*\
  !*** ./lib/api/auth-service.ts ***!
  \*********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   authService: function() { return /* binding */ authService; }\n/* harmony export */ });\n/* harmony import */ var _api_client__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./api-client */ \"(app-pages-browser)/./lib/api/api-client.ts\");\n\n// User authentication services\nconst authService = {\n    // Login user\n    login: async (email, password)=>{\n        try {\n            console.log(\"Login attempt with:\", email);\n            // Special case for admin demo account\n            if (email === \"admin@example.gov.in\" && password === \"password123\") {\n                console.log(\"Using admin credentials\");\n                // Create a token for the admin user\n                const adminToken = \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxIiwiZW1haWwiOiJhZG1pbkBleGFtcGxlLmdvdi5pbiIsImlhdCI6MTY5NzEyMDQyMCwiZXhwIjoxNzI4NjU2NDIwfQ.admin_user_token\";\n                const adminRefreshToken = \"refresh_token_admin\";\n                // Create admin user object\n                const adminUser = {\n                    id: \"1\",\n                    email: \"admin@example.gov.in\",\n                    full_name: \"Admin User\",\n                    department: \"Administration\",\n                    is_admin: true,\n                    is_reviewer: true\n                };\n                localStorage.setItem(\"auth-token\", adminToken);\n                localStorage.setItem(\"refresh-token\", adminRefreshToken);\n                localStorage.setItem(\"current-user\", JSON.stringify(adminUser));\n                // Clear any redirect flags from session storage\n                if ( true && window.sessionStorage) {\n                    sessionStorage.removeItem(\"admin-redirected\");\n                }\n                // Return admin user data\n                return {\n                    access_token: adminToken,\n                    refresh_token: adminRefreshToken,\n                    token_type: \"bearer\",\n                    user: adminUser\n                };\n            }\n            // Check for registered users in localStorage\n            const registeredUsers = JSON.parse(localStorage.getItem(\"registered-users\") || \"[]\");\n            const user = registeredUsers.find((u)=>u.email.toLowerCase() === email.toLowerCase());\n            if (user) {\n                console.log(\"Found registered user:\", user.email);\n                // Validate password - in a real app this would use proper password hashing\n                if (user.password === password) {\n                    console.log(\"Password matches for registered user\");\n                    // Create a token for the registered user - Use a fixed token for simplicity\n                    const userToken = \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIyIiwiZW1haWwiOiJyZWdpc3RlcmVkQGV4YW1wbGUuY29tIiwiaWF0IjoxNjk3MTIwNDIwLCJleHAiOjE3Mjg2NTY0MjB9.registered_user_token\";\n                    const userRefreshToken = \"refresh_token_registered\";\n                    // Ensure is_admin is properly set as a boolean\n                    const userWithBooleanFlags = {\n                        ...user,\n                        is_admin: user.is_admin === true,\n                        is_reviewer: user.is_reviewer === true\n                    };\n                    localStorage.setItem(\"auth-token\", userToken);\n                    localStorage.setItem(\"refresh-token\", userRefreshToken);\n                    localStorage.setItem(\"current-user\", JSON.stringify(userWithBooleanFlags));\n                    // Return user data\n                    return {\n                        access_token: userToken,\n                        refresh_token: userRefreshToken,\n                        token_type: \"bearer\",\n                        user: {\n                            id: user.id,\n                            email: user.email,\n                            full_name: user.full_name,\n                            department: user.department,\n                            is_admin: user.is_admin === true,\n                            is_reviewer: user.is_reviewer === true\n                        }\n                    };\n                } else {\n                    console.error(\"Password does not match for user:\", email);\n                    throw new Error(\"Invalid email or password\");\n                }\n            }\n            // If not found in registered users, try API call\n            try {\n                const formData = new URLSearchParams();\n                formData.append(\"username\", email); // Backend expects 'username' from form\n                formData.append(\"password\", password);\n                const response = await _api_client__WEBPACK_IMPORTED_MODULE_0__[\"default\"].post(\"/api/v1/auth/login\", formData, {\n                    headers: {\n                        \"Content-Type\": \"application/x-www-form-urlencoded\"\n                    }\n                });\n                console.log(\"Login response:\", response);\n                if (response.data.access_token) {\n                    localStorage.setItem(\"auth-token\", response.data.access_token);\n                    localStorage.setItem(\"refresh-token\", response.data.refresh_token);\n                }\n                // Mock user data since the token endpoint doesn't return user info\n                const mockUser = {\n                    id: \"1\",\n                    email: email,\n                    full_name: \"Standard User\",\n                    department: \"General\",\n                    is_admin: false,\n                    is_reviewer: false\n                };\n                return {\n                    ...response.data,\n                    user: mockUser\n                };\n            } catch (apiError) {\n                console.error(\"API login failed:\", apiError);\n                throw new Error(\"Invalid email or password\");\n            }\n        } catch (error) {\n            console.error(\"Error during login:\", error);\n            throw error;\n        }\n    },\n    // Register new user\n    register: async (userData)=>{\n        try {\n            console.log(\"Registration attempt with:\", userData.email);\n            // For development/testing - simulate registration without backend\n            // Store the registered user in localStorage for persistence\n            const registeredUsers = JSON.parse(localStorage.getItem(\"registered-users\") || \"[]\");\n            // Check if email already exists\n            const emailExists = registeredUsers.some((user)=>user.email.toLowerCase() === userData.email.toLowerCase());\n            if (emailExists) {\n                throw {\n                    response: {\n                        data: {\n                            detail: \"Email already registered. Please use a different email address.\"\n                        }\n                    }\n                };\n            }\n            // Check if email exists in admin account\n            if (userData.email.toLowerCase() === \"admin@example.gov.in\") {\n                throw {\n                    response: {\n                        data: {\n                            detail: \"This email is reserved for system administration. Please use a different email address.\"\n                        }\n                    }\n                };\n            }\n            // Create new user with generated ID and include password\n            const newUser = {\n                id: Date.now().toString(),\n                email: userData.email,\n                password: userData.password,\n                full_name: userData.full_name,\n                department: userData.department,\n                is_admin: userData.is_admin || false,\n                is_reviewer: userData.is_reviewer || false,\n                created_at: new Date().toISOString()\n            };\n            // Add to registered users\n            registeredUsers.push(newUser);\n            localStorage.setItem(\"registered-users\", JSON.stringify(registeredUsers));\n            console.log(\"Registration successful:\", newUser);\n            // Also update the users list in localStorage for the users page\n            const usersListData = JSON.parse(localStorage.getItem(\"users-list\") || \"[]\");\n            usersListData.push({\n                id: parseInt(newUser.id),\n                name: newUser.full_name,\n                email: newUser.email,\n                department: newUser.department,\n                role: newUser.is_admin ? \"Admin\" : newUser.is_reviewer ? \"Reviewer\" : \"Standard User\",\n                status: \"Active\"\n            });\n            localStorage.setItem(\"users-list\", JSON.stringify(usersListData));\n            return {\n                data: {\n                    message: \"Registration successful\",\n                    user: newUser\n                }\n            };\n        } catch (error) {\n            console.error(\"Registration error:\", error);\n            throw error;\n        }\n    },\n    // Logout user\n    logout: ()=>{\n        localStorage.removeItem(\"auth-token\");\n        localStorage.removeItem(\"refresh-token\");\n        // Skip calling backend if it's causing issues\n        // Just return a resolved promise so the flow continues\n        return Promise.resolve();\n    },\n    // Get current user profile\n    getCurrentUser: async ()=>{\n        try {\n            // Check if we're using the admin or registered user token\n            const token = localStorage.getItem(\"auth-token\");\n            // For admin or registered users\n            if (token && (token.includes(\"admin_user_token\") || token.includes(\"registered_user_token\"))) {\n                // Get the current user data from localStorage\n                const currentUser = JSON.parse(localStorage.getItem(\"current-user\") || \"{}\");\n                if (currentUser && currentUser.email) {\n                    return {\n                        data: {\n                            id: currentUser.id,\n                            email: currentUser.email,\n                            full_name: currentUser.full_name,\n                            department: currentUser.department,\n                            is_admin: currentUser.is_admin || false,\n                            is_reviewer: currentUser.is_reviewer || false\n                        }\n                    };\n                }\n            }\n            // Otherwise use the real API\n            return await _api_client__WEBPACK_IMPORTED_MODULE_0__[\"default\"].get(\"/users/me\");\n        } catch (error) {\n            console.error(\"Error getting current user:\", error);\n            throw error;\n        }\n    },\n    // Refresh token\n    refreshToken: async (refreshToken)=>{\n        return _api_client__WEBPACK_IMPORTED_MODULE_0__[\"default\"].post(\"/auth/refresh\", {\n            refresh_token: refreshToken\n        });\n    }\n};\n/* harmony default export */ __webpack_exports__[\"default\"] = (authService);\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./lib/api/auth-service.ts\n"));

/***/ })

});